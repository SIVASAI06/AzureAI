{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AdvworksLS",
						"type": "DatasetReference"
					},
					"name": "SourceOrderDetails"
				},
				{
					"dataset": {
						"referenceName": "AdvworksLS",
						"type": "DatasetReference"
					},
					"name": "SourceOrderHeader"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "TypeCast"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          SalesOrderDetailID as integer,",
				"          CarrierTrackingNumber as string,",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          SpecialOfferID as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(38,6),",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceOrderDetails",
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          SalesPersonID as integer,",
				"          TerritoryID as integer,",
				"          BillToAddressID as integer,",
				"          ShipToAddressID as integer,",
				"          ShipMethodID as integer,",
				"          CreditCardID as integer,",
				"          CreditCardApprovalCode as string,",
				"          CurrencyRateID as integer,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select * from [Sales].[SalesOrderHeader]',",
				"     format: 'query') ~> SourceOrderHeader",
				"SourceOrderDetails derive(UnitPrice = toDouble(round(UnitPrice,2))) ~> TypeCast"
			]
		}
	}
}